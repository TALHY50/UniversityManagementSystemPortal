@using UniversityManagementSystemPortal.Enum;
@using UniversityManagementSystemPortal.ModelDto.Institute;
@model InstituteCreateDto
<div class="modal fade" id="createInstituteModal" tabindex="-1" aria-labelledby="createInstituteModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="createInstituteModalLabel">Create a New Institute</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body">
                <form id="createInstituteForm" method="post" onsubmit="return validateForm();" asp-action="Create" asp-controller="Institute" data-ajax="true" data-ajax-method="POST" data-ajax-success="onSuccess" data-ajax-failure="onFailure">

                    <input type="hidden" name="Id" id="Id" />
                    <input type="hidden" name="Operation" id="Operation" value="Create" />

                    <div class="form-group mr-3">
                        <label for="Name" class="mr-2">Name <span class="text-danger">*</span></label>
                        <input type="text" class="form-control mr-2" name="Name" id="Name" placeholder="Institute Name" required />
                    </div>

                    <div class="form-group mr-3">
                        <label for="Type" class="mr-2">Type <span class="text-danger">*</span></label>
                        <select name="Type" id="Type" class="form-control mr-2">
                            <option value="">Select a type</option>
                            @foreach (InstituteType type in Enum.GetValues(typeof(InstituteType)))
                            {
                                <option value="@((int)type)">@type</option>
                            }
                        </select>
                    </div>
                    <div class="form-group icon-input-container mr-3">
                        <label for="Phone" class="mr-2">Phone <span class="text-danger">*</span></label>
                        <input type="text" class="form-control icon-input mr-2" name="Phone" id="Phone" placeholder="1234567890" required />
                        <i class="fas fa-phone input-icon"></i>
                    </div>

                    <div class="form-group icon-input-container mr-3">
                        <label for="Email" class="mr-2">Email <span class="text-danger">*</span></label>
                        <input type="email" class="form-control icon-input mr-2" name="Email" id="Email" placeholder="example@example.com" required />
                        <i class="fas fa-envelope input-icon"></i>
                    </div>

                    <div class="form-group icon-input-container mr-3">
                        <label for="Website" class="mr-2">Website</label>
                        <input type="url" class="form-control icon-input mr-2" name="Website" id="Website" placeholder="https://example.com" />
                        <i class="fas fa-globe input-icon"></i>
                    </div>

                    <div class="form-group mr-3">
                        <label for="Address" class="mr-2">Address</label>
                        <input type="text" class="form-control mr-2" name="Address" id="Address" placeholder="123 Main St, City, Country" />
                    </div>

                    <div class="form-group form-check mr-3">
                        <input type="checkbox" name="IsAutoIncrementAdmissionNo" id="IsAutoIncrementAdmissionNo" class="form-check-input" />
                        <label for="IsAutoIncrementAdmissionNo" class="form-check-label mr-2">Auto Increment Admission No</label>
                    </div>

                    <div class="form-group form-check mr-3">
                        <input type="checkbox" name="IsAutoIncrementEmployeeNo" id="IsAutoIncrementEmployeeNo" class="form-check-input" />
                        <label for="IsAutoIncrementEmployeeNo" class="form-check-label mr-2">Auto Increment Employee No</label>
                    </div>
                </form>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" id="submitInstitute">Save changes</button>
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        // Handle form submission
        $('#submitInstitute').click(function () {
            submitFormAndRefreshGrid();
        });

        // Initialize the DataTable after the table is loaded in the DOM
        initInstituteDataTable();

        // Add event listeners for the delete and update buttons
        $(document).on('click', '.delete-institute', function () {
            const instituteId = $(this).data('institute-id');
            const deleteUrl = '@Url.Action("Delete", "Institute")';
            deleteInstitute(instituteId, deleteUrl);
        });

        $(document).on('click', '.update-institute', function () {
            const instituteId = $(this).data('institute-id');
            const updateUrl = '@Url.Action("GetInstituteById", "Institute")';
            updateInstitute(instituteId, updateUrl);
        });
    });

    function submitFormAndRefreshGrid() {
        var form = $('#createInstituteForm');
        var operation = $('#Operation').val();

        var action = operation === 'Create' ? 'Create' : 'Update';
        var url = operation === 'Create' ? '@Url.Action("Create", "Institute")' : '@Url.Action("Update", "Institute")';

        $.ajax({
            url: url,
            type: form.attr('method'),
            data: form.serialize(),
            success: function (result) {
                if (result.success) {
                    // Success, refresh the table
                    refreshInstituteGrid();
                    clearFormFields();
                    $('#createInstituteModal').modal('hide');
                } else {
                    // Show error message
                    alert(result.error);
                }
            },
            error: function () {
                // Show error message
                alert('An error occurred while processing the institute.');
            }
        });
    }

    function refreshInstituteGrid() {
        $.ajax({
            url: '@Url.Action("LoadInstitutes", "Institute")',
            type: 'GET',
            success: function (partialView) {
                $('#instituteTableContainer').html(partialView);
                initInstituteDataTable();
            },
            error: function () {
                alert('An error occurred while refreshing the institute grid.');
            }
        });
    }

    function initInstituteDataTable() {
        // Check if the DataTable has been initialized
        if (!$.fn.DataTable.isDataTable('#instituteTable')) {
            // Initialize the DataTable
            $('#instituteTable').DataTable({
                // DataTable options can be added here
            });
        }
    }
    function setModalTitleAndSubmitButtonText(operation) {
        if (operation === 'Create') {
            $('#createInstituteModalLabel').text('Create a New Institute');
            $('#submitInstitute').text('Save changes');
        } else if (operation === 'Update') {
            $('#createInstituteModalLabel').text('Update Institute');
            $('#submitInstitute').text('Update changes');
        }
    }
    function updateInstitute(instituteId, getUrl) {
        $.ajax({
            url: getUrl,
            type: 'GET',
            data: { id: instituteId },
            success: function (result) {
                if (result.success) {
                    var instituteUpdateDto = result.data;
                    $('#createInstituteForm input[name="Id"]').val(instituteUpdateDto.id);
                    $('#createInstituteForm input[name="Name"]').val(instituteUpdateDto.name);
                    $('#createInstituteForm select[name="Type"]').val(instituteUpdateDto.type.toString());
                    $('#createInstituteForm input[name="Phone"]').val(instituteUpdateDto.phone);
                    $('#createInstituteForm input[name="Email"]').val(instituteUpdateDto.email);
                    $('#createInstituteForm input[name="Website"]').val(instituteUpdateDto.website);
                    $('#createInstituteForm input[name="Address"]').val(instituteUpdateDto.address);
                    $('#createInstituteForm input[name="IsAutoIncrementAdmissionNo"]').prop('checked', instituteUpdateDto.isAutoIncrementAdmissionNo);
                    $('#createInstituteForm input[name="IsAutoIncrementEmployeeNo"]').prop('checked', instituteUpdateDto.isAutoIncrementEmployeeNo);

                    $('#Operation').val('Update'); // Set operation to 'Update'
                    setModalTitleAndSubmitButtonText('Update'); // Update title and button text

                    $('#createInstituteModal').modal('show');
                } else {
                    alert('An error occurred while loading the institute for update.');
                }
            },
            error: function () {
                alert('An error occurred while loading the institute for update.');
            }
        });
    }

    function deleteInstitute(instituteId, deleteUrl) {
        if (confirm('Are you sure you want to delete this institute?')) {
            $.ajax({
                url: deleteUrl,
                type: 'POST',
                data: { id: instituteId },
                success: function (result) {
                    if (result.success) {
                        // Refresh the grid after a successful delete
                        refreshInstituteGrid();
                    } else {
                        alert('An error occurred while deleting the institute.');
                    }
                },
                error: function () {
                    alert('An error occurred while deleting the institute.');
                }
            });
        }
    }
    $('#createInstituteModal').on('hidden.bs.modal', function () {
        clearFormFields();
        $('#Operation').val('Create');
        setModalTitleAndSubmitButtonText('Create');
    });
    function clearFormFields() {
        $('#createInstituteForm')[0].reset();
    }
</script>
